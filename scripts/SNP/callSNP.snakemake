include: 'common.snakemake'


def get_all_inputs(wildcards):
    inputs = {}
    inputs['fixedBam'] = expand('{output_dir}/SNP/bam/{sample_id}/genome_rmdup.fixed.bam',output_dir=output_dir,sample_id=sample_ids)
    inputs['splittedBam'] = expand('{output_dir}/SNP/bam/{sample_id}/genome_rmdup.splitted.bam',output_dir=output_dir,sample_id=sample_ids)
    inputs['recalibratedBam'] = expand('{output_dir}/SNP/bam/{sample_id}/genome_rmdup.recalibrated.bam',output_dir=output_dir,sample_id=sample_ids)
    inputs['rawVcf'] = expand('{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.vcf.gz',output_dir=output_dir,sample_id=sample_ids)
    inputs['filteredVcf'] = expand('{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.filtered.vcf.gz',output_dir=output_dir,sample_id=sample_ids)
    inputs['filteredNoCallVcf'] = expand('{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.filtered.nocall.vcf.gz',output_dir=output_dir,sample_id=sample_ids)
    inputs['annotatedVcf'] = expand('{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.annotated.vcf.gz',output_dir=output_dir,sample_id=sample_ids)
    return list(inputs.values())
    
rule all:
    input:
        unpack(get_all_inputs)


rule addReadsGroup:
    input:
        rawBam = "{output_dir}/bam_sorted_by_coord/{sample_id}/genome_rmdup.bam"
    output:
        fixedBam='{output_dir}/SNP/bam/{sample_id}/genome_rmdup.fixed.bam'
    log:
        '{output_dir}/SNP/log/{sample_id}/1.addReadsGroup.log'
    params:
        sample_id='{sample_id}'
    shell:
        """
        gatk AddOrReplaceReadGroups --java-options -Xmx4G --INPUT {input.rawBam} \
        --OUTPUT {output.fixedBam} \
        -SO coordinate  \
        --RGLB library --RGPL illumina --RGPU HiSeq2000 --RGSM {params.sample_id} 2> {log}
        """

rule splitNCigarReads:
    input:
        fixedBam="{output_dir}/SNP/bam/{sample_id}/genome_rmdup.fixed.bam",
        ref="genome/hg38/fasta/genome.fa"
    output:
        splittedBam="{output_dir}/SNP/bam/{sample_id}/genome_rmdup.splitted.bam"
    log:
        '{output_dir}/SNP/log/{sample_id}/2.splitNCigarReads.log'
    shell:
        """
        gatk SplitNCigarReads --java-options -Xmx4G --input {input.fixedBam} \
        --output {output.splittedBam} \
        --create-output-bam-index -R {input.ref} \
        --tmp-dir tmp 2> {log}
        """

rule baseQualityRecalibration:
    input:
        splittedBam='{output_dir}/SNP/bam/{sample_id}/genome_rmdup.splitted.bam',
        dbSNP='/Share2/home/lulab/jinyunfan/data/SNP/dbSNP/All_20180418.vcf.gz',
        ref="genome/hg38/fasta/genome.fa"
    output:
        recalibratedBam='{output_dir}/SNP/bam/{sample_id}/genome_rmdup.recalibrated.bam',
        grpFile='{output_dir}/SNP/bam/{sample_id}/genome_rmdup.recalibrated.grp'
    log:
        '{output_dir}/SNP/log/{sample_id}/3.baseQualityRecalibration.log'
    shell:
        """
        gatk BaseRecalibrator --java-options -Xmx4G --input {input.splittedBam} \
        --output {output.grpFile} \
        --tmp-dir tmp \
        --known-sites {input.dbSNP} --reference {input.ref} 2> {log}

        gatk ApplyBQSR -R {input.ref} -I {input.splittedBam}  \
        --bqsr-recal-file {output.grpFile} --tmp-dir tmp -O {output.recalibratedBam} 2> {log}
        """

rule HaplotypeCaller:
    input:
        recalibratedBam='{output_dir}/SNP/bam/{sample_id}/genome_rmdup.recalibrated.bam',
        ref="genome/hg38/fasta/genome.fa"
    output:
        rawVcf="{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.vcf.gz"
    log:
        '{output_dir}/SNP/log/{sample_id}/4.HaplotypeCaller.log'
    shell:
        """
        gatk HaplotypeCaller --java-options -Xmx4G -R {input.ref} \
        -I {input.recalibratedBam} -O {output.rawVcf} \
        --tmp-dir tmp 2>  {log}
        """
        
rule filterVcf:
    input:
        rawVcf="{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.vcf.gz",
        ref="genome/hg38/fasta/genome.fa",
        cosmicVcf="/Share2/home/lulab/jinyunfan/data/SNP/COSMIC/mutation/CosmicMuts.collapsed.vcf.gz"
    output:
        filteredVcf="{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.filtered.vcf.gz",
        filteredNoCallVcf="{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.filtered.nocall.vcf.gz",
        annotatedVcf = '{output_dir}/SNP/vcf/{sample_id}/HaplotypeCaller.annotated.vcf.gz'
    log:
        '{output_dir}/SNP/log/{sample_id}/4.filterVariants.log'
    shell:
        """
        gatk VariantFiltration --java-options -Xmx4G \
        -R {input.ref} -V {input.rawVcf} \
        -window 35 -cluster 3 \
        --filter-name FS -filter "FS > 30.0" \
        --filter-name QD -filter "QD < 2.0" \
        -O {output.filteredVcf} 2> {log}

        gatk SelectVariants -V {output.filteredVcf} --java-options -Xmx4G \
        -O {output.filteredNoCallVcf} \
        -R {input.ref} \
        --set-filtered-gt-to-nocall true \
        --select-type-to-include SNP --sites-only-vcf-output true 2>> {log}
        
        bedtools intersect -a {output.filteredNoCallVcf} -b {input.cosmicVcf}  | pigz -c >  {output.annotatedVcf}
        
        """
